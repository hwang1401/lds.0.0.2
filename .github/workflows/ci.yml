name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8.15.0
        run_install: false
    
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Check directory structure
      run: |
        pwd
        ls -la
        echo "Checking packages directory..."
        ls -la packages/
        echo "Checking workspace file..."
        cat pnpm-workspace.yaml
        echo "Checking if pnpm-lock.yaml exists..."
        ls -la pnpm-lock.yaml || echo "pnpm-lock.yaml not found, will create new one"
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        pnpm install --frozen-lockfile
        echo "Checking installed packages..."
        pnpm list --depth=0
    
    - name: Verify semantic.json files
      run: |
        echo "Checking semantic.json files..."
        ls -la packages/system-01/semantic.json || echo "Missing semantic.json in system-01"
        ls -la packages/system-02/semantic.json || echo "Missing semantic.json in system-02"
        ls -la packages/shared/foundation.json || echo "Missing foundation.json in shared"
    
    - name: Build shared package
      run: |
        echo "Building shared package..."
        cd packages/shared
        pnpm run build:tokens
        pnpm run build:components
        echo "Checking shared build output..."
        ls -la dist/
    
    - name: Evaluate color accessibility
      run: |
        echo "Evaluating color accessibility..."
        cd packages/shared
        pnpm run evaluate:colors
        echo "Color evaluation completed"
    
    - name: Build system packages
      run: |
        echo "Building system-01..."
        cd packages/system-01
        pnpm run build:tokens
        pnpm run build:components
        echo "Checking system-01 build output..."
        ls -la dist/
        
        echo "Building system-02..."
        cd ../system-02
        pnpm run build:tokens
        pnpm run build:components
        echo "Checking system-02 build output..."
        ls -la dist/
    
    - name: Build Storybook
      run: |
        echo "Building Storybook..."
        cd packages/storybook
        echo "Checking storybook dependencies..."
        pnpm list --depth=0
        echo "Building storybook..."
        pnpm run build-storybook
        echo "Checking storybook build output..."
        ls -la storybook-static/ 