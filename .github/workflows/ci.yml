name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8.15.0
        run_install: false
    
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Check workspace configuration
      run: |
        echo "🔍 Checking workspace configuration..."
        ls -la
        echo "📦 Packages directory:"
        ls -la packages/
        echo "⚙️ Workspace configuration:"
        cat pnpm-workspace.yaml
        echo "🔒 Root lock file:"
        ls -la pnpm-lock.yaml || echo "pnpm-lock.yaml not found"
    
    - name: Install dependencies
      run: |
        echo "📥 Installing dependencies..."
        pnpm install --frozen-lockfile
        echo "✅ Dependencies installed successfully"
    
    - name: Verify required files
      run: |
        echo "🔍 Checking semantic.json files..."
        ls -la packages/system-01/semantic.json || echo "❌ Missing semantic.json in system-01"
        ls -la packages/system-02/semantic.json || echo "❌ Missing semantic.json in system-02"
        ls -la packages/shared/foundation.json || echo "❌ Missing foundation.json in shared"
    
    - name: Build all packages
      run: |
        echo "🔨 Building all packages..."
        pnpm run build:all
        echo "✅ All packages built successfully"
    
    - name: Evaluate color accessibility
      run: |
        echo "🎨 Evaluating color accessibility..."
        pnpm run evaluate:colors
        echo "✅ Color evaluation completed"
    
    - name: Verify build outputs
      run: |
        echo "🔍 Checking build outputs..."
        echo "📁 Shared package dist:"
        ls -la packages/shared/dist/ || echo "❌ Missing shared dist"
        echo "📁 System-01 dist:"
        ls -la packages/system-01/dist/ || echo "❌ Missing system-01 dist"
        echo "📁 System-02 dist:"
        ls -la packages/system-02/dist/ || echo "❌ Missing system-02 dist"
    
    - name: Build Storybook
      run: |
        echo "📚 Building Storybook..."
        pnpm run storybook:build:production
        echo "✅ Storybook built successfully"
        echo "📁 Storybook output:"
        ls -la packages/storybook/storybook-static/ || echo "❌ Missing storybook output" 